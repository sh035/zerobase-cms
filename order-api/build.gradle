plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.zerobase.order'
version = 'unspecified'

repositories {
    mavenCentral()
}

ext{
    set('springCloudVersion', "2021.0.1")
    querydslVersion = "5.0.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

dependencies {

    implementation project(path: ":zerobase-domain", configuration: 'default')

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    testImplementation 'com.h2database:h2'

    implementation 'org.springframework.data:spring-data-envers'
    implementation "io.springfox:springfox-boot-starter:3.0.0"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'


}

dependencyManagement {
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

// QueryDSL Q클래스 생성을 위한 설정
def querydslSrcDir = layout.buildDirectory.dir('generated/sources/annotationProcessor/java/main').get().asFile

// 소스 세트에 QueryDSL Q클래스 출력 디렉토리 추가
sourceSets {
    main {
        java {
            srcDirs += [ querydslSrcDir ]
        }
    }
}

// clean 작업 시 QueryDSL 출력 디렉토리 제거
clean {
    delete querydslSrcDir
}

// Gradle 5.0 이상에서는 Annotation Processor 출력 디렉토리가 자동으로 설정됨
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(querydslSrcDir)
}